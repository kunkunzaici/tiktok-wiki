"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[785],{1248:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-9a9fc3e0",path:"/miniProgram/qrcode.html",title:"二维码",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"实例化",slug:"实例化",children:[]},{level:2,title:"生成二维码【createQRCode】",slug:"生成二维码【createqrcode】",children:[]}],filePathRelative:"miniProgram/qrcode.md",git:{updatedTime:1642766768e3,contributors:[{name:"zhaoxiang",email:"756958008@qq.com",commits:1}]}}},214:(a,n,s)=>{s.r(n),s.d(n,{default:()=>i});var e=s(6252);const p=(0,e.uE)('<h1 id="二维码" tabindex="-1"><a class="header-anchor" href="#二维码" aria-hidden="true">#</a> 二维码</h1><h2 id="实例化" tabindex="-1"><a class="header-anchor" href="#实例化" aria-hidden="true">#</a> 实例化</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token keyword">use</span> <span class="token package">EasyTiktok<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token class-name static-context">Application</span><span class="token operator">::</span><span class="token function">miniProgram</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token string single-quoted-string">&#39;app_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;app_id&#39;</span><span class="token punctuation">,</span>\n    <span class="token string single-quoted-string">&#39;secret&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;secret&#39;</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token property">qr_code</span><span class="token punctuation">;</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="生成二维码【createqrcode】" tabindex="-1"><a class="header-anchor" href="#生成二维码【createqrcode】" aria-hidden="true">#</a> 生成二维码【createQRCode】</h2>',4),t=(0,e.Uk)("🚨 使用前建议熟读 "),o={href:"https://microapp.bytedance.com/docs/zh-CN/mini-app/develop/server/qr-code/create-qr-code",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("抖音小程序文档"),c=(0,e.uE)('<p>获取小程序/小游戏的二维码。该二维码可通过任意 app 扫码打开，能跳转到开发者指定的对应字节系 app 内拉起小程序/小游戏， 并传入开发者指定的参数。通过该接口生成的二维码，永久有效，暂无数量限制。</p><p>使用示例：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">getUnLimit</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$appName</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$optional</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),l={},i=(0,s(3744).Z)(l,[["render",function(a,n){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("blockquote",null,[(0,e._)("p",null,[t,(0,e._)("a",o,[r,(0,e.Wm)(s)])])]),c],64)}]])},3744:(a,n)=>{n.Z=(a,n)=>{const s=a.__vccOpts||a;for(const[a,e]of n)s[a]=e;return s}}}]);