"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[135],{6127:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-46febb7b",path:"/miniProgram/server.html",title:"服务器",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"实例化",slug:"实例化",children:[]},{level:2,title:"解密数据",slug:"解密数据",children:[]}],filePathRelative:"miniProgram/server.md",git:{updatedTime:1642766768e3,contributors:[{name:"zhaoxiang",email:"756958008@qq.com",commits:1}]}}},6724:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var e=a(6252);const p=(0,e.uE)('<h1 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器" aria-hidden="true">#</a> 服务器</h1><h2 id="实例化" tabindex="-1"><a class="header-anchor" href="#实例化" aria-hidden="true">#</a> 实例化</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n<span class="token keyword">use</span> <span class="token package">EasyTiktok<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token class-name static-context">Application</span><span class="token operator">::</span><span class="token function">miniProgram</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token string single-quoted-string">&#39;app_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;app_id&#39;</span><span class="token punctuation">,</span>\n    <span class="token string single-quoted-string">&#39;secret&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;secret&#39;</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token property">encryptor</span><span class="token punctuation">;</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="解密数据" tabindex="-1"><a class="header-anchor" href="#解密数据" aria-hidden="true">#</a> 解密数据</h2>',4),t=(0,e.Uk)("🚨 使用前建议熟读 "),l={href:"https://microapp.bytedance.com/docs/zh-CN/mini-app/develop/api/open-interface/user-information/sensitive-data-process/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("抖音小程序文档"),r=(0,e.uE)('<ul><li>对称解密使用的算法为 AES-128-CBC，数据采用 PKCS#7 填充</li><li>对称解密的目标密文为 encryptedData，即敏感数据</li><li>对称解密秘钥 aeskey = Base64_Decode(session_key), aeskey 长度为 16Byte</li><li>对称解密算法初始向量为 Base64_Decode(iv)</li></ul><p>使用示例：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">decryptData</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$sessionKey</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$iv</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$encrypted</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),i={},c=(0,a(3744).Z)(i,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("blockquote",null,[(0,e._)("p",null,[t,(0,e._)("a",l,[o,(0,e.Wm)(a)])])]),r],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);